# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
is_twice_as_long <- a = 2b = TRUE
# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
is_twice_as_long <- (a = 2b) = TRUE
a=4
b=2
# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
is_twice_as_long <- (a = 2b) = TRUE
# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
is_twice_as_long <- function(a = 2b)
return(status)
return(status)
string1 <- 2
string2 <- 4
# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
if_twice_as_long <- function(string1, string2) {
if ((nchar(string1)) > 2*(nchar(string2))){
status <- "greater_than"
}else if ((nchar(string1)) = 2*(nchar(string2))){
status <- "equals_to"
}
return(status)
}
string1(ab)
string1(ab)
string2 <- abcd
# Call your `is_twice_as_long` function by passing it different length strings
# Call your `is_twice_as_long` function by passing it different length strings
# to confirm that it works. Make sure to check when _either_ argument is twice
# Define a function `describe_difference` that takes in two strings. The
# Define a function `describe_difference` that takes in two strings. The
# function should return one of the following sentences as appropriate
string1 <- ab
string2 <- abcd
status <- "niether_equal_or_greatre_than"
return(status)
(string1 = ab, string2 = abcd)
string2(abcd)
if ((nchar(string1)) > 2*(nchar(string2))){
status <- "greater_than"
}else if ((nchar(string1)) = 2*(nchar(string2))){
status <- "equals_to"
}else{
status <- "niether_equal_or_greatre_than"
}
return(status)
if_twice_as_long("Ryna", "Maggie")
# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
if_twice_as_long <- function("string1", "string2") {
if ((nchar(string1)) > 2*(nchar(string2))){
status <- "greater_than"
}else if ((nchar(string1)) = 2*(nchar(string2))){
status <- "equals_to"
}else{
status <- "niether_equal_or_greatre_than"
}
return(status)
}
if ((nchar(x)) > 2*(nchar(y))){
status <- "greater_than"
}else if ((nchar(x)) = 2*(nchar(y))){
status <- "equals_to"
}else{
status <- "niether_equal_or_greatre_than"
}
